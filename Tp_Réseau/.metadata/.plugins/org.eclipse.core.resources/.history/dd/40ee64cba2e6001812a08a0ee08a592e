package fr.ensisa.hassenforder.transportation.server.network;

import java.io.OutputStream;
import java.util.ArrayList;
import java.util.List;

import fr.ensisa.hassenforder.network.BasicAbstractWriter;
import fr.ensisa.hassenforder.transportation.kiosk.network.Protocol;
import fr.ensisa.hassenforder.transportation.server.model.Pass;
import fr.ensisa.hassenforder.transportation.server.model.Route;
import fr.ensisa.hassenforder.transportation.server.model.Subscription;
import fr.ensisa.hassenforder.transportation.server.model.Ticket;
import fr.ensisa.hassenforder.transportation.server.model.Transaction;
import fr.ensisa.hassenforder.transportation.server.model.Urban;

public class KioskWriter extends BasicAbstractWriter
{

 public KioskWriter(OutputStream outputStream)
 {
  super (outputStream);
 }

 protected void createCardInfoReplay(Pass pass)
 {
  List<Ticket> tickets;

  writeInt(Protocol.RP_CARD_INFO);
  writeLong(pass.getPassId());
  writeString(pass.getDescription());
  tickets = pass.getTickets();
  for(Ticket t : tickets )
  {// est-ce qu'il faut tester l'id avec getPassId dans la class Ticket ??
   if(pass.getPassId() == t.getPassId())
   {
    writeString(t.getTicketId());
   }
   
  }
 }

 protected void createKoReplay()
 {
  writeInt(Protocol.RP_KO);
 }

 protected void createCardIdReplay()
 {
  writeInt(Protocol.RP_CARD_ID);
 }

 protected void createPopupOkReplay()
 {
  writeInt(Protocol.RP_POPUP_OK);
 }

 protected void createPopupAnnulerReplay()
 {
  writeInt(Protocol.RP_POPUP_ANNULER);
 }
}
